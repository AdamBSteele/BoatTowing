"""empty message

Revision ID: a645822aa495
Revises: None
Create Date: 2017-09-30 17:37:59.632684

"""

from alembic import op
import sqlalchemy as sa
import geoalchemy2

# revision identifiers, used by Alembic.
revision = 'a645822aa495'
down_revision = None


def upgrade():
    # commands auto generated by Alembic - please adjust! #
    op.create_table(
        'live_configuration',
        sa.Column('modification_time', sa.DateTime(), nullable=False),
        sa.Column('modification_user', sa.String(length=32), nullable=True),
        sa.Column('application_url', sa.String(length=36), nullable=True),
        sa.Column('tow_radius', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('modification_time')
    )
    op.create_table(
        'location',
        sa.Column('id', sa.String(length=64), nullable=False),
        sa.Column('lat', sa.Float(), nullable=True),
        sa.Column('lon', sa.Float(), nullable=True),
        sa.Column('is_water', sa.Boolean(), nullable=True),
        sa.Column('color_google', sa.String(length=36), nullable=True),
        sa.Column('last_seen', sa.Date(), nullable=True),
        sa.Column('geom', geoalchemy2.types.Geometry(geometry_type='POLYGON'), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'location_history',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('location_id', sa.String(length=64), nullable=True),
        sa.Column('user_id', sa.String(length=32), nullable=True),
        sa.Column('timestamp', sa.DateTime(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'tow_event',
        sa.Column('id', sa.String(length=32), nullable=False),
        sa.Column('accepted_time', sa.DateTime(), nullable=True),
        sa.Column('completed_time', sa.DateTime(), nullable=True),
        sa.Column('cancelled_time', sa.DateTime(), nullable=True),
        sa.Column('time_sent', sa.DateTime(), nullable=True),
        sa.Column('requestor_id', sa.String(length=32), nullable=True),
        sa.Column('requestee_id', sa.String(length=32), nullable=True),
        sa.Column('status', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'tow_request_batch',
        sa.Column('id', sa.String(length=32), nullable=False),
        sa.Column('requestor_id', sa.String(length=32), nullable=True),
        sa.Column('time_sent', sa.DateTime(), nullable=True),
        sa.Column('num_requests', sa.Integer(), nullable=True),
        sa.Column('num_rejections', sa.Integer(), nullable=True),
        sa.Column('last_update', sa.DateTime(), nullable=True),
        sa.Column('status', sa.Integer(), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'terraintracker_user',
        sa.Column('id', sa.String(length=32), nullable=False),
        sa.Column('phone', sa.String(length=10), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('first_name', sa.String(length=40), nullable=True),
        sa.Column('last_name', sa.String(length=40), nullable=True),
        sa.Column('active', sa.Boolean(), nullable=True),
        sa.Column('last_geo_point_seen', geoalchemy2.types.Geography(geometry_type='POINT', srid=4326), nullable=True),
        sa.Column('last_lat_seen', sa.String(length=255), nullable=True),
        sa.Column('last_long_seen', sa.String(length=255), nullable=True),
        sa.Column('last_time_seen', sa.DateTime(), nullable=True),
        sa.Column('over_water', sa.Boolean(), nullable=True),
        sa.Column('requestee_tow_request_id', sa.String(length=255), nullable=True),
        sa.Column('active_tow_event_serving_id', sa.String(length=32), nullable=True),
        sa.Column('active_tow_event_receiving_id', sa.String(length=32), nullable=True),
        sa.Column('stored_token', sa.String(length=256), nullable=True),
        sa.Column('apns_token', sa.String(length=255), nullable=True),
        sa.Column('honorific', sa.String(length=10), nullable=True),
        sa.Column('gender', sa.String(length=1), nullable=True),
        sa.Column('address1', sa.String(length=255), nullable=True),
        sa.Column('address2', sa.String(length=255), nullable=True),
        sa.Column('city', sa.String(length=40), nullable=True),
        sa.Column('state', sa.String(length=2), nullable=True),
        sa.Column('zipcode', sa.String(length=10), nullable=True),
        sa.Column('country', sa.String(length=40), nullable=True),
        sa.Column('nationality', sa.String(length=255), nullable=True),
        sa.Column('notes', sa.String(length=255), nullable=True),
        sa.Column('middle_name', sa.String(length=40), nullable=True),
        sa.Column('birth_date', sa.String(length=10), nullable=True),
        sa.Column('uses_parent_account', sa.Boolean(), nullable=True),
        sa.Column('parent_id', sa.String(length=32), nullable=True),
        sa.Column('id_card_number', sa.String(length=255), nullable=True),
        sa.Column('id_card_expiration_date', sa.String(length=10), nullable=True),
        sa.Column('_password', sa.String(length=255), nullable=True),
        sa.Column('company', sa.String(length=255), nullable=True),
        sa.Column('ip_address', sa.String(length=45), nullable=True),
        sa.Column('_is_test_user', sa.Boolean(), nullable=True),
        sa.ForeignKeyConstraint(['active_tow_event_receiving_id'], ['tow_event.id'], ),
        sa.ForeignKeyConstraint(['active_tow_event_serving_id'], ['tow_event.id'], ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('phone')
    )
    op.create_table(
        'tow_request',
        sa.Column('id', sa.String(length=32), nullable=False),
        sa.Column('tow_request_batch_id', sa.String(length=32), nullable=True),
        sa.Column('requestor_location', sa.String(length=32), nullable=True),
        sa.Column('requestee_id', sa.String(length=32), nullable=True),
        sa.Column('requestee_location', sa.String(length=32), nullable=True),
        sa.Column('time_sent', sa.DateTime(), nullable=True),
        sa.Column('rejection_time', sa.DateTime(), nullable=True),
        sa.Column('cancelled_time', sa.DateTime(), nullable=True),
        sa.Column('tow_event_id', sa.String(length=32), nullable=True),
        sa.Column('status', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['tow_request_batch_id'], ['tow_request_batch.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table(
        'terraintracker_boat',
        sa.Column('id', sa.String(length=32), nullable=False),
        sa.Column('user_id', sa.String(length=32), nullable=True),
        sa.Column('model', sa.String(length=32), nullable=True),
        sa.Column('engine_hp', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['user_id'], ['terraintracker_user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    # end Alembic commands #


def downgrade():
    # commands auto generated by Alembic - please adjust! #
    op.drop_table('terraintracker_boat')
    op.drop_table('tow_request')
    op.drop_table('terraintracker_user')
    op.drop_table('tow_request_batch')
    op.drop_table('tow_event')
    op.drop_table('location_history')
    op.drop_table('location')
    op.drop_table('live_configuration')
    # end Alembic commands #
